{
  "{\"sourceRoot\":\"D:\\\\CODE\\\\CURRENT\\\\vidcon\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\CODE\\\\CURRENT\\\\vidcon\",\"filename\":\"D:\\\\CODE\\\\CURRENT\\\\vidcon\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\CODE\\\\CURRENT\\\\vidcon\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\CODE\\CURRENT\\vidcon\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\CODE\\CURRENT\\vidcon",
      "filename": "D:\\CODE\\CURRENT\\vidcon\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\CODE\\CURRENT\\vidcon",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\CODE\\CURRENT\\vidcon\\server.js",
        "plugins": [
          "jsx",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\CODE\\CURRENT\\vidcon\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\CODE\\CURRENT\\vidcon\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar express = require(\"express\");\n\nvar path = require('path');\n\nvar app = express(); //app.get('/', (req,res) => res.send(\"HELLO FROM EXPRESS\"));\n\napp.use(express[\"static\"]('public'));\napp.get('/*', function (req, res) {\n  res.sendFile(path.join(__dirname, './public/index.html'), function (err) {\n    if (err) {\n      res.status(500).send(err);\n    }\n  });\n});\nvar server = app.listen(3000, function () {\n  return console.log(\"listening on port 3000!\");\n}); //socket.io config\n\nvar io = require('socket.io')({\n  path: '/webrtc'\n});\n\nio.listen(server); // https://www.tutorialspoint.com/socket.io/socket.io_namespaces.htm\n\nvar peers = io.of('/webrtcPeer'); // keep a reference of all socket connections\n\nvar connectedPeers = new Map();\npeers.on('connection', function (socket) {\n  console.log(socket.id);\n  socket.emit('connection-success', {\n    success: socket.id\n  });\n  connectedPeers.set(socket.id, socket);\n  socket.on('disconnect', function () {\n    console.log('disconnected');\n    connectedPeers[\"delete\"](socket.id);\n  });\n  socket.on('offerOrAnswer', function (data) {\n    // send to the other peer(s) if any\n    var _iterator = _createForOfIteratorHelper(connectedPeers.entries()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            socketID = _step$value[0],\n            _socket = _step$value[1];\n\n        // don't send to self\n        if (socketID !== data.socketID) {\n          console.log(socketID, data.payload.type);\n\n          _socket.emit('offerOrAnswer', data.payload);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  });\n  socket.on('candidate', function (data) {\n    // send candidate to the other peer(s) if any\n    var _iterator2 = _createForOfIteratorHelper(connectedPeers.entries()),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _step2$value = _slicedToArray(_step2.value, 2),\n            socketID = _step2$value[0],\n            _socket2 = _step2$value[1];\n\n        // don't send to self\n        if (socketID !== data.socketID) {\n          console.log(socketID, data.payload);\n\n          _socket2.emit('candidate', data.payload);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInBhdGgiLCJhcHAiLCJ1c2UiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kRmlsZSIsImpvaW4iLCJfX2Rpcm5hbWUiLCJlcnIiLCJzdGF0dXMiLCJzZW5kIiwic2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsImlvIiwicGVlcnMiLCJvZiIsImNvbm5lY3RlZFBlZXJzIiwiTWFwIiwib24iLCJzb2NrZXQiLCJpZCIsImVtaXQiLCJzdWNjZXNzIiwic2V0IiwiZGF0YSIsImVudHJpZXMiLCJzb2NrZXRJRCIsInBheWxvYWQiLCJ0eXBlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQUlFLEdBQUcsR0FBR0gsT0FBTyxFQUFqQixDLENBRUE7O0FBRUFHLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSixPQUFPLFVBQVAsQ0FBZSxRQUFmLENBQVI7QUFFQUcsR0FBRyxDQUFDRSxHQUFKLENBQVEsSUFBUixFQUFjLFVBQVVDLEdBQVYsRUFBZUMsR0FBZixFQUFvQjtBQUM5QkEsRUFBQUEsR0FBRyxDQUFDQyxRQUFKLENBQWFOLElBQUksQ0FBQ08sSUFBTCxDQUFVQyxTQUFWLEVBQXFCLHFCQUFyQixDQUFiLEVBQTBELFVBQVVDLEdBQVYsRUFBZTtBQUNyRSxRQUFJQSxHQUFKLEVBQVM7QUFDTEosTUFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJGLEdBQXJCO0FBQ0g7QUFDSixHQUpEO0FBS0gsQ0FORDtBQVFBLElBQU1HLE1BQU0sR0FBR1gsR0FBRyxDQUFDWSxNQUFKLENBQVcsSUFBWCxFQUFpQjtBQUFBLFNBQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHlCQUFaLENBQU47QUFBQSxDQUFqQixDQUFmLEMsQ0FFQTs7QUFDQSxJQUFJQyxFQUFFLEdBQUdqQixPQUFPLENBQUMsV0FBRCxDQUFQLENBQ0o7QUFDR0MsRUFBQUEsSUFBSSxFQUFFO0FBRFQsQ0FESSxDQUFUOztBQUtBZ0IsRUFBRSxDQUFDSCxNQUFILENBQVVELE1BQVYsRSxDQUVBOztBQUNBLElBQU1LLEtBQUssR0FBR0QsRUFBRSxDQUFDRSxFQUFILENBQU0sYUFBTixDQUFkLEMsQ0FFQTs7QUFDQSxJQUFJQyxjQUFjLEdBQUcsSUFBSUMsR0FBSixFQUFyQjtBQUVBSCxLQUFLLENBQUNJLEVBQU4sQ0FBUyxZQUFULEVBQXVCLFVBQUFDLE1BQU0sRUFBSTtBQUUvQlIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlPLE1BQU0sQ0FBQ0MsRUFBbkI7QUFDQUQsRUFBQUEsTUFBTSxDQUFDRSxJQUFQLENBQVksb0JBQVosRUFBa0M7QUFBRUMsSUFBQUEsT0FBTyxFQUFFSCxNQUFNLENBQUNDO0FBQWxCLEdBQWxDO0FBRUFKLEVBQUFBLGNBQWMsQ0FBQ08sR0FBZixDQUFtQkosTUFBTSxDQUFDQyxFQUExQixFQUE4QkQsTUFBOUI7QUFFQUEsRUFBQUEsTUFBTSxDQUFDRCxFQUFQLENBQVUsWUFBVixFQUF3QixZQUFNO0FBQzVCUCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFaO0FBQ0FJLElBQUFBLGNBQWMsVUFBZCxDQUFzQkcsTUFBTSxDQUFDQyxFQUE3QjtBQUNELEdBSEQ7QUFLQUQsRUFBQUEsTUFBTSxDQUFDRCxFQUFQLENBQVUsZUFBVixFQUEyQixVQUFDTSxJQUFELEVBQVU7QUFDbkM7QUFEbUMsK0NBRUZSLGNBQWMsQ0FBQ1MsT0FBZixFQUZFO0FBQUE7O0FBQUE7QUFFbkMsMERBQTJEO0FBQUE7QUFBQSxZQUEvQ0MsUUFBK0M7QUFBQSxZQUFyQ1AsT0FBcUM7O0FBQ3pEO0FBQ0EsWUFBSU8sUUFBUSxLQUFLRixJQUFJLENBQUNFLFFBQXRCLEVBQWdDO0FBQzlCZixVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWWMsUUFBWixFQUFzQkYsSUFBSSxDQUFDRyxPQUFMLENBQWFDLElBQW5DOztBQUNBVCxVQUFBQSxPQUFNLENBQUNFLElBQVAsQ0FBWSxlQUFaLEVBQTZCRyxJQUFJLENBQUNHLE9BQWxDO0FBQ0Q7QUFDRjtBQVJrQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBU3BDLEdBVEQ7QUFXQVIsRUFBQUEsTUFBTSxDQUFDRCxFQUFQLENBQVUsV0FBVixFQUF1QixVQUFDTSxJQUFELEVBQVU7QUFDL0I7QUFEK0IsZ0RBRUVSLGNBQWMsQ0FBQ1MsT0FBZixFQUZGO0FBQUE7O0FBQUE7QUFFL0IsNkRBQTJEO0FBQUE7QUFBQSxZQUEvQ0MsUUFBK0M7QUFBQSxZQUFyQ1AsUUFBcUM7O0FBQ3pEO0FBQ0EsWUFBSU8sUUFBUSxLQUFLRixJQUFJLENBQUNFLFFBQXRCLEVBQWdDO0FBQzlCZixVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWWMsUUFBWixFQUFzQkYsSUFBSSxDQUFDRyxPQUEzQjs7QUFDQVIsVUFBQUEsUUFBTSxDQUFDRSxJQUFQLENBQVksV0FBWixFQUF5QkcsSUFBSSxDQUFDRyxPQUE5QjtBQUNEO0FBQ0Y7QUFSOEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVNoQyxHQVREO0FBV0QsQ0FsQ0QiLCJzb3VyY2VSb290IjoiRDpcXENPREVcXENVUlJFTlRcXHZpZGNvblxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxubGV0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy9hcHAuZ2V0KCcvJywgKHJlcSxyZXMpID0+IHJlcy5zZW5kKFwiSEVMTE8gRlJPTSBFWFBSRVNTXCIpKTtcblxuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpO1xuXG5hcHAuZ2V0KCcvKicsIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICAgIHJlcy5zZW5kRmlsZShwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi9wdWJsaWMvaW5kZXguaHRtbCcpLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycilcbiAgICAgICAgfVxuICAgIH0pXG59KVxuXG5jb25zdCBzZXJ2ZXIgPSBhcHAubGlzdGVuKDMwMDAsICgpID0+IGNvbnNvbGUubG9nKFwibGlzdGVuaW5nIG9uIHBvcnQgMzAwMCFcIikpO1xuXG4vL3NvY2tldC5pbyBjb25maWdcbnZhciBpbyA9IHJlcXVpcmUoJ3NvY2tldC5pbycpXG4gICAgKHtcbiAgICAgICAgcGF0aDogJy93ZWJydGMnXG4gICAgfSlcblxuaW8ubGlzdGVuKHNlcnZlcilcblxuLy8gaHR0cHM6Ly93d3cudHV0b3JpYWxzcG9pbnQuY29tL3NvY2tldC5pby9zb2NrZXQuaW9fbmFtZXNwYWNlcy5odG1cbmNvbnN0IHBlZXJzID0gaW8ub2YoJy93ZWJydGNQZWVyJylcblxuLy8ga2VlcCBhIHJlZmVyZW5jZSBvZiBhbGwgc29ja2V0IGNvbm5lY3Rpb25zXG5sZXQgY29ubmVjdGVkUGVlcnMgPSBuZXcgTWFwKClcblxucGVlcnMub24oJ2Nvbm5lY3Rpb24nLCBzb2NrZXQgPT4ge1xuXG4gIGNvbnNvbGUubG9nKHNvY2tldC5pZClcbiAgc29ja2V0LmVtaXQoJ2Nvbm5lY3Rpb24tc3VjY2VzcycsIHsgc3VjY2Vzczogc29ja2V0LmlkIH0pXG5cbiAgY29ubmVjdGVkUGVlcnMuc2V0KHNvY2tldC5pZCwgc29ja2V0KVxuXG4gIHNvY2tldC5vbignZGlzY29ubmVjdCcsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnZGlzY29ubmVjdGVkJylcbiAgICBjb25uZWN0ZWRQZWVycy5kZWxldGUoc29ja2V0LmlkKVxuICB9KVxuXG4gIHNvY2tldC5vbignb2ZmZXJPckFuc3dlcicsIChkYXRhKSA9PiB7XG4gICAgLy8gc2VuZCB0byB0aGUgb3RoZXIgcGVlcihzKSBpZiBhbnlcbiAgICBmb3IgKGNvbnN0IFtzb2NrZXRJRCwgc29ja2V0XSBvZiBjb25uZWN0ZWRQZWVycy5lbnRyaWVzKCkpIHtcbiAgICAgIC8vIGRvbid0IHNlbmQgdG8gc2VsZlxuICAgICAgaWYgKHNvY2tldElEICE9PSBkYXRhLnNvY2tldElEKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHNvY2tldElELCBkYXRhLnBheWxvYWQudHlwZSlcbiAgICAgICAgc29ja2V0LmVtaXQoJ29mZmVyT3JBbnN3ZXInLCBkYXRhLnBheWxvYWQpXG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4gIHNvY2tldC5vbignY2FuZGlkYXRlJywgKGRhdGEpID0+IHtcbiAgICAvLyBzZW5kIGNhbmRpZGF0ZSB0byB0aGUgb3RoZXIgcGVlcihzKSBpZiBhbnlcbiAgICBmb3IgKGNvbnN0IFtzb2NrZXRJRCwgc29ja2V0XSBvZiBjb25uZWN0ZWRQZWVycy5lbnRyaWVzKCkpIHtcbiAgICAgIC8vIGRvbid0IHNlbmQgdG8gc2VsZlxuICAgICAgaWYgKHNvY2tldElEICE9PSBkYXRhLnNvY2tldElEKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHNvY2tldElELCBkYXRhLnBheWxvYWQpXG4gICAgICAgIHNvY2tldC5lbWl0KCdjYW5kaWRhdGUnLCBkYXRhLnBheWxvYWQpXG4gICAgICB9XG4gICAgfVxuICB9KVxuXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "path",
        "app",
        "use",
        "get",
        "req",
        "res",
        "sendFile",
        "join",
        "__dirname",
        "err",
        "status",
        "send",
        "server",
        "listen",
        "console",
        "log",
        "io",
        "peers",
        "of",
        "connectedPeers",
        "Map",
        "on",
        "socket",
        "id",
        "emit",
        "success",
        "set",
        "data",
        "entries",
        "socketID",
        "payload",
        "type"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\CODE\\CURRENT\\vidcon\\",
      "sourcesContent": [
        "const express = require(\"express\");\nconst path = require('path')\nlet app = express();\n\n//app.get('/', (req,res) => res.send(\"HELLO FROM EXPRESS\"));\n\napp.use(express.static('public'));\n\napp.get('/*', function (req, res) {\n    res.sendFile(path.join(__dirname, './public/index.html'), function (err) {\n        if (err) {\n            res.status(500).send(err)\n        }\n    })\n})\n\nconst server = app.listen(3000, () => console.log(\"listening on port 3000!\"));\n\n//socket.io config\nvar io = require('socket.io')\n    ({\n        path: '/webrtc'\n    })\n\nio.listen(server)\n\n// https://www.tutorialspoint.com/socket.io/socket.io_namespaces.htm\nconst peers = io.of('/webrtcPeer')\n\n// keep a reference of all socket connections\nlet connectedPeers = new Map()\n\npeers.on('connection', socket => {\n\n  console.log(socket.id)\n  socket.emit('connection-success', { success: socket.id })\n\n  connectedPeers.set(socket.id, socket)\n\n  socket.on('disconnect', () => {\n    console.log('disconnected')\n    connectedPeers.delete(socket.id)\n  })\n\n  socket.on('offerOrAnswer', (data) => {\n    // send to the other peer(s) if any\n    for (const [socketID, socket] of connectedPeers.entries()) {\n      // don't send to self\n      if (socketID !== data.socketID) {\n        console.log(socketID, data.payload.type)\n        socket.emit('offerOrAnswer', data.payload)\n      }\n    }\n  })\n\n  socket.on('candidate', (data) => {\n    // send candidate to the other peer(s) if any\n    for (const [socketID, socket] of connectedPeers.entries()) {\n      // don't send to self\n      if (socketID !== data.socketID) {\n        console.log(socketID, data.payload)\n        socket.emit('candidate', data.payload)\n      }\n    }\n  })\n\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1601268734695
  },
  "{\"sourceRoot\":\"D:\\\\CODE\\\\CURRENT\\\\vidcon\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\CODE\\\\CURRENT\\\\vidcon\",\"filename\":\"D:\\\\CODE\\\\CURRENT\\\\vidcon\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\CODE\\\\CURRENT\\\\vidcon\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\CODE\\CURRENT\\vidcon\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\CODE\\CURRENT\\vidcon",
      "filename": "D:\\CODE\\CURRENT\\vidcon\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\CODE\\CURRENT\\vidcon",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\CODE\\CURRENT\\vidcon\\server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\CODE\\CURRENT\\vidcon\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\CODE\\CURRENT\\vidcon\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar express = require(\"express\");\n\nvar path = require('path');\n\nvar app = express(); //app.get('/', (req,res) => res.send(\"HELLO FROM EXPRESS\"));\n\napp.use(express[\"static\"]('public'));\napp.get('/*', function (req, res) {\n  res.sendFile(path.join(__dirname, './public/index.html'), function (err) {\n    if (err) {\n      res.status(500).send(err);\n    }\n  });\n});\nvar server = app.listen(3000, function () {\n  return console.log(\"listening on port 3000!\");\n});\n\nvar io = require('socket.io')({\n  path: '/webrtc'\n});\n\nio.listen(server); // default namespace\n\nio.on('connection', function (socket) {\n  console.log('connected');\n}); // https://www.tutorialspoint.com/socket.io/socket.io_namespaces.htm\n\nvar peers = io.of('/webrtcPeer'); // keep a reference of all socket connections\n\nvar connectedPeers = new Map();\npeers.on('connection', function (socket) {\n  connectedPeers.set(socket.id, socket);\n  console.log(socket.id);\n  socket.emit('connection-success', {\n    success: socket.id,\n    peerCount: connectedPeers.size\n  });\n\n  var broadcast = function broadcast() {\n    return socket.broadcast.emit('joined-peers', {\n      peerCount: connectedPeers.size\n    });\n  };\n\n  broadcast();\n\n  var disconnectedPeer = function disconnectedPeer(socketID) {\n    return socket.broadcast.emit('peer-disconnected', {\n      peerCount: connectedPeers.size,\n      socketID: socketID\n    });\n  };\n\n  socket.on('disconnect', function () {\n    console.log('disconnected');\n    connectedPeers[\"delete\"](socket.id);\n    disconnectedPeer(socket.id);\n  });\n  socket.on('onlinePeers', function (data) {\n    var _iterator = _createForOfIteratorHelper(connectedPeers.entries()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            socketID = _step$value[0],\n            _socket = _step$value[1];\n\n        // don't send to self\n        if (socketID !== data.socketID.local) {\n          console.log('online-peer', data.socketID, socketID);\n          socket.emit('online-peer', socketID);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  });\n  socket.on('offer', function (data) {\n    var _iterator2 = _createForOfIteratorHelper(connectedPeers.entries()),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _step2$value = _slicedToArray(_step2.value, 2),\n            socketID = _step2$value[0],\n            _socket2 = _step2$value[1];\n\n        // don't send to self\n        if (socketID === data.socketID.remote) {\n          // console.log('Offer', socketID, data.socketID, data.payload.type)\n          _socket2.emit('offer', {\n            sdp: data.payload,\n            socketID: data.socketID.local\n          });\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  });\n  socket.on('answer', function (data) {\n    var _iterator3 = _createForOfIteratorHelper(connectedPeers.entries()),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _step3$value = _slicedToArray(_step3.value, 2),\n            socketID = _step3$value[0],\n            _socket3 = _step3$value[1];\n\n        if (socketID === data.socketID.remote) {\n          console.log('Answer', socketID, data.socketID, data.payload.type);\n\n          _socket3.emit('answer', {\n            sdp: data.payload,\n            socketID: data.socketID.local\n          });\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }); // socket.on('offerOrAnswer', (data) => {\n  //   // send to the other peer(s) if any\n  //   for (const [socketID, socket] of connectedPeers.entries()) {\n  //     // don't send to self\n  //     if (socketID !== data.socketID) {\n  //       console.log(socketID, data.payload.type)\n  //       socket.emit('offerOrAnswer', data.payload)\n  //     }\n  //   }\n  // })\n\n  socket.on('candidate', function (data) {\n    // send candidate to the other peer(s) if any\n    var _iterator4 = _createForOfIteratorHelper(connectedPeers.entries()),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _step4$value = _slicedToArray(_step4.value, 2),\n            socketID = _step4$value[0],\n            _socket4 = _step4$value[1];\n\n        if (socketID === data.socketID.remote) {\n          _socket4.emit('candidate', {\n            candidate: data.payload,\n            socketID: data.socketID.local\n          });\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInBhdGgiLCJhcHAiLCJ1c2UiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kRmlsZSIsImpvaW4iLCJfX2Rpcm5hbWUiLCJlcnIiLCJzdGF0dXMiLCJzZW5kIiwic2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsImlvIiwib24iLCJzb2NrZXQiLCJwZWVycyIsIm9mIiwiY29ubmVjdGVkUGVlcnMiLCJNYXAiLCJzZXQiLCJpZCIsImVtaXQiLCJzdWNjZXNzIiwicGVlckNvdW50Iiwic2l6ZSIsImJyb2FkY2FzdCIsImRpc2Nvbm5lY3RlZFBlZXIiLCJzb2NrZXRJRCIsImRhdGEiLCJlbnRyaWVzIiwiX3NvY2tldCIsImxvY2FsIiwicmVtb3RlIiwic2RwIiwicGF5bG9hZCIsInR5cGUiLCJjYW5kaWRhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBSUUsR0FBRyxHQUFHSCxPQUFPLEVBQWpCLEMsQ0FFQTs7QUFFQUcsR0FBRyxDQUFDQyxHQUFKLENBQVFKLE9BQU8sVUFBUCxDQUFlLFFBQWYsQ0FBUjtBQUVBRyxHQUFHLENBQUNFLEdBQUosQ0FBUSxJQUFSLEVBQWMsVUFBVUMsR0FBVixFQUFlQyxHQUFmLEVBQW9CO0FBQ2hDQSxFQUFBQSxHQUFHLENBQUNDLFFBQUosQ0FBYU4sSUFBSSxDQUFDTyxJQUFMLENBQVVDLFNBQVYsRUFBcUIscUJBQXJCLENBQWIsRUFBMEQsVUFBVUMsR0FBVixFQUFlO0FBQ3ZFLFFBQUlBLEdBQUosRUFBUztBQUNQSixNQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsR0FBckI7QUFDRDtBQUNGLEdBSkQ7QUFLRCxDQU5E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Q0E7QUFDQTtBQUNBOztBQUVBakIsRUFBQUEsTUFBTSxDQUFDRCxFQUFQLENBQVUsV0FBVixFQUF1QixVQUFDZSxJQUFELEVBQVU7QUFDL0I7QUFEK0IsZ0RBRUVYLGNBQWMsQ0FBQ1ksT0FBZixFQUZGO0FBQUE7O0FBQUE7QUFFL0IsNkRBQTJEO0FBQUE7QUFBQSxZQUEvQ0YsUUFBK0M7QUFBQSxZQUFyQ2IsUUFBcUM7O0FBQ3pELFlBQUlhLFFBQVEsS0FBS0MsSUFBSSxDQUFDRCxRQUFMLENBQWNLLE1BQS9CLEVBQXVDO0FBQ3JDbEIsVUFBQUEsUUFBTSxDQUFDTyxJQUFQLENBQVksV0FBWixFQUF5QjtBQUN2QmUsWUFBQUEsU0FBUyxFQUFFUixJQUFJLENBQUNNLE9BRE87QUFFdkJQLFlBQUFBLFFBQVEsRUFBRUMsSUFBSSxDQUFDRCxRQUFMLENBQWNJO0FBRkQsV0FBekI7QUFJRDtBQUNGO0FBVDhCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFVaEMsR0FWRDtBQVlELENBdEZEIiwic291cmNlUm9vdCI6IkQ6XFxDT0RFXFxDVVJSRU5UXFx2aWRjb25cXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcbmxldCBhcHAgPSBleHByZXNzKCk7XG5cbi8vYXBwLmdldCgnLycsIChyZXEscmVzKSA9PiByZXMuc2VuZChcIkhFTExPIEZST00gRVhQUkVTU1wiKSk7XG5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKTtcblxuYXBwLmdldCgnLyonLCBmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgcmVzLnNlbmRGaWxlKHBhdGguam9pbihfX2Rpcm5hbWUsICcuL3B1YmxpYy9pbmRleC5odG1sJyksIGZ1bmN0aW9uIChlcnIpIHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpXG4gICAgfVxuICB9KVxufSlcblxuXG5jb25zdCBzZXJ2ZXIgPSBhcHAubGlzdGVuKDMwMDAsICgpID0+IGNvbnNvbGUubG9nKFwibGlzdGVuaW5nIG9uIHBvcnQgMzAwMCFcIikpO1xuXG52YXIgaW8gPSByZXF1aXJlKCdzb2NrZXQuaW8nKVxuICAoe1xuICAgIHBhdGg6ICcvd2VicnRjJ1xuICB9KVxuXG5pby5saXN0ZW4oc2VydmVyKVxuXG4vLyBkZWZhdWx0IG5hbWVzcGFjZVxuaW8ub24oJ2Nvbm5lY3Rpb24nLCBzb2NrZXQgPT4ge1xuICBjb25zb2xlLmxvZygnY29ubmVjdGVkJylcbn0pXG5cbi8vIGh0dHBzOi8vd3d3LnR1dG9yaWFsc3BvaW50LmNvbS9zb2NrZXQuaW8vc29ja2V0LmlvX25hbWVzcGFjZXMuaHRtXG5jb25zdCBwZWVycyA9IGlvLm9mKCcvd2VicnRjUGVlcicpXG5cbi8vIGtlZXAgYSByZWZlcmVuY2Ugb2YgYWxsIHNvY2tldCBjb25uZWN0aW9uc1xubGV0IGNvbm5lY3RlZFBlZXJzID0gbmV3IE1hcCgpXG5cbnBlZXJzLm9uKCdjb25uZWN0aW9uJywgc29ja2V0ID0+IHtcblxuICBjb25uZWN0ZWRQZWVycy5zZXQoc29ja2V0LmlkLCBzb2NrZXQpXG5cbiAgY29uc29sZS5sb2coc29ja2V0LmlkKVxuICBzb2NrZXQuZW1pdCgnY29ubmVjdGlvbi1zdWNjZXNzJywge1xuICAgIHN1Y2Nlc3M6IHNvY2tldC5pZCxcbiAgICBwZWVyQ291bnQ6IGNvbm5lY3RlZFBlZXJzLnNpemUsXG4gIH0pXG5cbiAgY29uc3QgYnJvYWRjYXN0ID0gKCkgPT4gc29ja2V0LmJyb2FkY2FzdC5lbWl0KCdqb2luZWQtcGVlcnMnLCB7XG4gICAgcGVlckNvdW50OiBjb25uZWN0ZWRQZWVycy5zaXplLFxuICB9KVxuICBicm9hZGNhc3QoKVxuXG4gIGNvbnN0IGRpc2Nvbm5lY3RlZFBlZXIgPSAoc29ja2V0SUQpID0+IHNvY2tldC5icm9hZGNhc3QuZW1pdCgncGVlci1kaXNjb25uZWN0ZWQnLCB7XG4gICAgcGVlckNvdW50OiBjb25uZWN0ZWRQZWVycy5zaXplLFxuICAgIHNvY2tldElEOiBzb2NrZXRJRFxuICB9KVxuXG4gIHNvY2tldC5vbignZGlzY29ubmVjdCcsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnZGlzY29ubmVjdGVkJylcbiAgICBjb25uZWN0ZWRQZWVycy5kZWxldGUoc29ja2V0LmlkKVxuICAgIGRpc2Nvbm5lY3RlZFBlZXIoc29ja2V0LmlkKVxuICB9KVxuXG4gIHNvY2tldC5vbignb25saW5lUGVlcnMnLCAoZGF0YSkgPT4ge1xuICAgIGZvciAoY29uc3QgW3NvY2tldElELCBfc29ja2V0XSBvZiBjb25uZWN0ZWRQZWVycy5lbnRyaWVzKCkpIHtcbiAgICAgIC8vIGRvbid0IHNlbmQgdG8gc2VsZlxuICAgICAgaWYgKHNvY2tldElEICE9PSBkYXRhLnNvY2tldElELmxvY2FsKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdvbmxpbmUtcGVlcicsIGRhdGEuc29ja2V0SUQsIHNvY2tldElEKVxuICAgICAgICBzb2NrZXQuZW1pdCgnb25saW5lLXBlZXInLCBzb2NrZXRJRClcbiAgICAgIH1cbiAgICB9XG4gIH0pXG5cbiAgc29ja2V0Lm9uKCdvZmZlcicsIGRhdGEgPT4ge1xuICAgIGZvciAoY29uc3QgW3NvY2tldElELCBzb2NrZXRdIG9mIGNvbm5lY3RlZFBlZXJzLmVudHJpZXMoKSkge1xuICAgICAgLy8gZG9uJ3Qgc2VuZCB0byBzZWxmXG4gICAgICBpZiAoc29ja2V0SUQgPT09IGRhdGEuc29ja2V0SUQucmVtb3RlKSB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdPZmZlcicsIHNvY2tldElELCBkYXRhLnNvY2tldElELCBkYXRhLnBheWxvYWQudHlwZSlcbiAgICAgICAgc29ja2V0LmVtaXQoJ29mZmVyJywge1xuICAgICAgICAgICAgc2RwOiBkYXRhLnBheWxvYWQsXG4gICAgICAgICAgICBzb2NrZXRJRDogZGF0YS5zb2NrZXRJRC5sb2NhbFxuICAgICAgICAgIH1cbiAgICAgICAgKVxuICAgICAgfVxuICAgIH1cbiAgfSlcblxuICBzb2NrZXQub24oJ2Fuc3dlcicsIChkYXRhKSA9PiB7XG4gICAgZm9yIChjb25zdCBbc29ja2V0SUQsIHNvY2tldF0gb2YgY29ubmVjdGVkUGVlcnMuZW50cmllcygpKSB7XG4gICAgICBpZiAoc29ja2V0SUQgPT09IGRhdGEuc29ja2V0SUQucmVtb3RlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdBbnN3ZXInLCBzb2NrZXRJRCwgZGF0YS5zb2NrZXRJRCwgZGF0YS5wYXlsb2FkLnR5cGUpXG4gICAgICAgIHNvY2tldC5lbWl0KCdhbnN3ZXInLCB7XG4gICAgICAgICAgICBzZHA6IGRhdGEucGF5bG9hZCxcbiAgICAgICAgICAgIHNvY2tldElEOiBkYXRhLnNvY2tldElELmxvY2FsXG4gICAgICAgICAgfVxuICAgICAgICApXG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4gIC8vIHNvY2tldC5vbignb2ZmZXJPckFuc3dlcicsIChkYXRhKSA9PiB7XG4gIC8vICAgLy8gc2VuZCB0byB0aGUgb3RoZXIgcGVlcihzKSBpZiBhbnlcbiAgLy8gICBmb3IgKGNvbnN0IFtzb2NrZXRJRCwgc29ja2V0XSBvZiBjb25uZWN0ZWRQZWVycy5lbnRyaWVzKCkpIHtcbiAgLy8gICAgIC8vIGRvbid0IHNlbmQgdG8gc2VsZlxuICAvLyAgICAgaWYgKHNvY2tldElEICE9PSBkYXRhLnNvY2tldElEKSB7XG4gIC8vICAgICAgIGNvbnNvbGUubG9nKHNvY2tldElELCBkYXRhLnBheWxvYWQudHlwZSlcbiAgLy8gICAgICAgc29ja2V0LmVtaXQoJ29mZmVyT3JBbnN3ZXInLCBkYXRhLnBheWxvYWQpXG4gIC8vICAgICB9XG4gIC8vICAgfVxuICAvLyB9KVxuXG4gIHNvY2tldC5vbignY2FuZGlkYXRlJywgKGRhdGEpID0+IHtcbiAgICAvLyBzZW5kIGNhbmRpZGF0ZSB0byB0aGUgb3RoZXIgcGVlcihzKSBpZiBhbnlcbiAgICBmb3IgKGNvbnN0IFtzb2NrZXRJRCwgc29ja2V0XSBvZiBjb25uZWN0ZWRQZWVycy5lbnRyaWVzKCkpIHtcbiAgICAgIGlmIChzb2NrZXRJRCA9PT0gZGF0YS5zb2NrZXRJRC5yZW1vdGUpIHtcbiAgICAgICAgc29ja2V0LmVtaXQoJ2NhbmRpZGF0ZScsIHtcbiAgICAgICAgICBjYW5kaWRhdGU6IGRhdGEucGF5bG9hZCxcbiAgICAgICAgICBzb2NrZXRJRDogZGF0YS5zb2NrZXRJRC5sb2NhbFxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH1cbiAgfSlcblxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "path",
        "app",
        "use",
        "get",
        "req",
        "res",
        "sendFile",
        "join",
        "__dirname",
        "err",
        "status",
        "send",
        "server",
        "listen",
        "console",
        "log",
        "io",
        "on",
        "socket",
        "peers",
        "of",
        "connectedPeers",
        "Map",
        "set",
        "id",
        "emit",
        "success",
        "peerCount",
        "size",
        "broadcast",
        "disconnectedPeer",
        "socketID",
        "data",
        "entries",
        "_socket",
        "local",
        "remote",
        "sdp",
        "payload",
        "type",
        "candidate"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\CODE\\CURRENT\\vidcon\\",
      "sourcesContent": [
        "const express = require(\"express\");\nconst path = require('path')\nlet app = express();\n\n//app.get('/', (req,res) => res.send(\"HELLO FROM EXPRESS\"));\n\napp.use(express.static('public'));\n\napp.get('/*', function (req, res) {\n  res.sendFile(path.join(__dirname, './public/index.html'), function (err) {\n    if (err) {\n      res.status(500).send(err)\n    }\n  })\n})\n\n\nconst server = app.listen(3000, () => console.log(\"listening on port 3000!\"));\n\nvar io = require('socket.io')\n  ({\n    path: '/webrtc'\n  })\n\nio.listen(server)\n\n// default namespace\nio.on('connection', socket => {\n  console.log('connected')\n})\n\n// https://www.tutorialspoint.com/socket.io/socket.io_namespaces.htm\nconst peers = io.of('/webrtcPeer')\n\n// keep a reference of all socket connections\nlet connectedPeers = new Map()\n\npeers.on('connection', socket => {\n\n  connectedPeers.set(socket.id, socket)\n\n  console.log(socket.id)\n  socket.emit('connection-success', {\n    success: socket.id,\n    peerCount: connectedPeers.size,\n  })\n\n  const broadcast = () => socket.broadcast.emit('joined-peers', {\n    peerCount: connectedPeers.size,\n  })\n  broadcast()\n\n  const disconnectedPeer = (socketID) => socket.broadcast.emit('peer-disconnected', {\n    peerCount: connectedPeers.size,\n    socketID: socketID\n  })\n\n  socket.on('disconnect', () => {\n    console.log('disconnected')\n    connectedPeers.delete(socket.id)\n    disconnectedPeer(socket.id)\n  })\n\n  socket.on('onlinePeers', (data) => {\n    for (const [socketID, _socket] of connectedPeers.entries()) {\n      // don't send to self\n      if (socketID !== data.socketID.local) {\n        console.log('online-peer', data.socketID, socketID)\n        socket.emit('online-peer', socketID)\n      }\n    }\n  })\n\n  socket.on('offer', data => {\n    for (const [socketID, socket] of connectedPeers.entries()) {\n      // don't send to self\n      if (socketID === data.socketID.remote) {\n        // console.log('Offer', socketID, data.socketID, data.payload.type)\n        socket.emit('offer', {\n            sdp: data.payload,\n            socketID: data.socketID.local\n          }\n        )\n      }\n    }\n  })\n\n  socket.on('answer', (data) => {\n    for (const [socketID, socket] of connectedPeers.entries()) {\n      if (socketID === data.socketID.remote) {\n        console.log('Answer', socketID, data.socketID, data.payload.type)\n        socket.emit('answer', {\n            sdp: data.payload,\n            socketID: data.socketID.local\n          }\n        )\n      }\n    }\n  })\n\n  // socket.on('offerOrAnswer', (data) => {\n  //   // send to the other peer(s) if any\n  //   for (const [socketID, socket] of connectedPeers.entries()) {\n  //     // don't send to self\n  //     if (socketID !== data.socketID) {\n  //       console.log(socketID, data.payload.type)\n  //       socket.emit('offerOrAnswer', data.payload)\n  //     }\n  //   }\n  // })\n\n  socket.on('candidate', (data) => {\n    // send candidate to the other peer(s) if any\n    for (const [socketID, socket] of connectedPeers.entries()) {\n      if (socketID === data.socketID.remote) {\n        socket.emit('candidate', {\n          candidate: data.payload,\n          socketID: data.socketID.local\n        })\n      }\n    }\n  })\n\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1601372895880
  }
}